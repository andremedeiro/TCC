CASO DE USO

@startuml

Responsavel as r

Administrador as adm

usecase "Retirar Chave" as retirar
usecase "Devolver Chave" as devolver
usecase "Buscar Chave" as buscar
usecase "Chave no Local" as local

r -- retirar
r -- devolver

retirar <.. local :<<extends>>
devolver ..> buscar :<<includes>>



adm --- (Cadastrar Chave)
adm --- (Cadastrar Responsavel)
adm -- (Remover Chave)
adm --- (Remover Responsavel)
adm -- (Cadastrar Memorando)
adm --- (Remover Memorando)
adm --- (Permitir uso da sala)


@enduml

DIAGRAMA DE CLASSES

@startuml


class Sistema {
    string matricula_administrador
    conexao
    cursor
    
    matricula_administrador()
    cadastrar_chave(local)
    cadastrar_usuario(nome, matricula, tipo)
    cadastrar_memorando(professor, lista_alunos, local, inicio, encerramento)
    retirar_chave(local, usuario, data_retirada, hora_retirada)
    devolver_chave(local, usuario, data_entrega, hora_entrega)
    buscar_usuario(matricula)
    buscar_chave(local)
    busca_autorizacao(matricula, local)
    remover_chave(local)
    remover_usuario(matricula)
    listar_chaves()
    listar_usuarios()
    chaves_em_circulacao()
    menu_usuario(usuario)
    menu_administrador()
}


class Usuario {
    string nome
    string matricula
    string tipo
    
    inserir_usuario(nome, matricula, tipo)
    remover_usuario(matricula)
    buscar_usuario(matricula)
    listar_usuarios()
}

class UsuarioDAO {
    conexao
    cursor

    criar_tabela()
    insere_usuario(nome, matricula, tipo)
    remove_usuario(matricula)
    listar_usuarios()
    retorna_objeto(tupla)

}


class Chave {
    string local
    string data_retirada
    string horario_saida
    string responsavel_retirada
    string data_entrega
    string horario_entrega
    string devolvedor
 
    inserir_chave(local)
    retirar_chave(local, usuario, data_retirada, hora_retirada)
    devolver_chave(local, usuario, data_entrega, hora_entrega)
    listar_chaves()
    chaves_em_circulacao()
    remover_chave(local)
}


class ChaveDAO {
    conexao
    cursor
    
    criar_tabela()
    insere_chave(local)
    retira_chave(local, usuario, data_retirada, hora_retirada)
    devolve_chave(local, usuario, data_entrega, hora_entraga)
    listar_chaves()
    remover_chave(local)
    chaves_em_circulacao()
    retorna_objeto(tupla)
}

class Memorando {
    string professor
    list alunos
    string local
    string inicio
    string encerramento
    string situacao
    
    inserir_memorando(professor, aluno, local, inicio,
    encerramento, situacao)
    busca_autorizacao(matricula, local)
    listar_memorando()
    memorandos_validos()
    ajeita_data(data)
    
}

class MemorandoDAO {
    conexao
    cursor
    
    criar_tabela()
    ajeitar_situacoes()
    insere_memorando(professor, aluno, local, inicio,
    encerramento, situacao)
    busca_autorizacao(matricula, local)
    listar_memorando()
    memorando_validos()
    retorna_objeto(tupla)

}

Chave --> Sistema
Usuario --> Sistema
Memorando --> Sistema

ChaveDAO --> Chave
UsuarioDAO --> Usuario
MemorandoDAO --> Memorando

@enduml


DIAGRAMAS DE SEQUENCIAS

DEVOLVER CHAVE

@startuml

participant Usuario as usu
participant Sistema as sis
participant ChaveDAO as dao

[-> usu:Devolver Chave
usu -> sis : devolver_chave()
sis -> dao : busca_chave()
dao --> sis : Retorna Chave
sis --> usu : Autoriza Devolução


@enduml

RETIRAR CHAVE

@startuml

participant Usuario as usu
participant Sistema as sis
participant ChaveDAO as dao

[-> usu: Retirar Chave
usu -> sis : retirar_chave()
sis -> dao : busca_chave()
dao --> sis : Retorna Chave
sis -> sis : Analisa_usuario()
sis --> usu : Autoriza Retirada


@enduml

CADASTRAR USUARIO

@startuml

participant Usuário as usu
participant Sistema as sis
participant UsuarioDAO as dao

[-> usu: Cadastrar Usuario
usu -> sis: Cadastrar_Usuario()
sis -> dao: Buscar_Usuario()
dao --> sis: Resultado da busca
sis --> usu: Usuario Cadastrado

@enduml


CADASTRAR CHAVE

@startuml

participant Usuário as usu
participant Sistema as sis
participant ChaveDAO as dao

[-> usu: Cadastrar Chave
usu -> sis: Cadastrar_Chave()
sis -> dao: Buscar_Chave()
dao --> sis: Resultado da busca
sis --> usu: Chave Cadastrada

@enduml
